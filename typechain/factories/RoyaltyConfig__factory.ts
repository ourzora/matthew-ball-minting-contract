/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RoyaltyConfig, RoyaltyConfigInterface } from "../RoyaltyConfig";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bps",
        type: "uint256",
      },
    ],
    name: "UpdatedRoyalty",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "royalities",
    outputs: [
      {
        internalType: "uint256",
        name: "bps",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061055c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a7146100465780632a55205a14610076578063b5004f01146100a7575b600080fd5b610060600480360381019061005b9190610262565b6100d8565b60405161006d9190610352565b60405180910390f35b610090600480360381019061008b91906102bc565b610142565b60405161009e929190610329565b60405180910390f35b6100c160048036038101906100bc919061028f565b6101f4565b6040516100cf92919061036d565b60405180910390f35b60007f2a55205a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000806000806000868152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080602001516127108260000151866101de91906103c7565b6101e89190610396565b92509250509250929050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b600081359050610247816104f8565b92915050565b60008135905061025c8161050f565b92915050565b600060208284031215610278576102776104f3565b5b600061028684828501610238565b91505092915050565b6000602082840312156102a5576102a46104f3565b5b60006102b38482850161024d565b91505092915050565b600080604083850312156102d3576102d26104f3565b5b60006102e18582860161024d565b92505060206102f28582860161024d565b9150509250929050565b61030581610421565b82525050565b61031481610433565b82525050565b6103238161048b565b82525050565b600060408201905061033e60008301856102fc565b61034b602083018461031a565b9392505050565b6000602082019050610367600083018461030b565b92915050565b6000604082019050610382600083018561031a565b61038f60208301846102fc565b9392505050565b60006103a18261048b565b91506103ac8361048b565b9250826103bc576103bb6104c4565b5b828204905092915050565b60006103d28261048b565b91506103dd8361048b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561041657610415610495565b5b828202905092915050565b600061042c8261046b565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6105018161043f565b811461050c57600080fd5b50565b6105188161048b565b811461052357600080fd5b5056fea264697066735822122095d4843093d2ce6f009f02acbacb5df4522200a65064ad6ca8e75d074bd4e9db64736f6c63430008060033";

export class RoyaltyConfig__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RoyaltyConfig> {
    return super.deploy(overrides || {}) as Promise<RoyaltyConfig>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RoyaltyConfig {
    return super.attach(address) as RoyaltyConfig;
  }
  connect(signer: Signer): RoyaltyConfig__factory {
    return super.connect(signer) as RoyaltyConfig__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RoyaltyConfigInterface {
    return new utils.Interface(_abi) as RoyaltyConfigInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RoyaltyConfig {
    return new Contract(address, _abi, signerOrProvider) as RoyaltyConfig;
  }
}
